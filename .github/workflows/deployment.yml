name: Deploy Frontend & Backend to Amazon ECR
 
on:
  push:
    branches:
      - main  # Runs on pushes to the main branch on GitHub
 
permissions:
  id-token: write
  contents: read
 
jobs:
  deploy:
    name: Build, Push & Restart ECS Services
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
 
      - name: Authenticate Docker with ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
 
      # Build & Push Frontend Image
      - name: Build Frontend Docker Image
        run: |
          docker build -t ${{ secrets.ECR_FRONTEND_REPO }} ./inft3200-frontend-main
 
      - name: Tag Frontend Image
        run: |
          docker tag ${{ secrets.ECR_FRONTEND_REPO }}:latest \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_FRONTEND_REPO }}:latest
 
      - name: Push Frontend Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_FRONTEND_REPO }}:latest
 
      # Build & Push Backend Image
      - name: Build Backend Docker Image
        run: |
          docker build -t ${{ secrets.ECR_BACKEND_REPO }} ./inft3200-backend-main
 
      - name: Tag Backend Image
        run: |
          docker tag ${{ secrets.ECR_BACKEND_REPO }}:latest \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_BACKEND_REPO }}:latest
 
      - name: Push Backend Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_BACKEND_REPO }}:latest
 
      # Force ECS to Redeploy Both Services
      - name: Restart ECS Frontend Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_FRONTEND_SERVICE }} \
          --force-new-deployment
 
      - name: Restart ECS Backend Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_BACKEND_SERVICE }} \
          --force-new-deployment
         
